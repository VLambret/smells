[package]
name = "smells"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
structopt = "0.3.26"
serde = { version = "1.0.156", features = ["derive"]}
serde_json = {version = "1.0.94", features = ["preserve_order"]}
git2 = "0.17.0"
predicates = "3.0.2"
walkdir = "2.3.3"
maplit = "1.0.2"
fxhash = "0.2"

[dev-dependencies]
assert_cmd = "2.0.8"
predicates = "3.0.1"
rstest = "0.17.0"
tempdir = "0.3.7"
cucumber = "0.19.1"
futures = "0.3"
inventory = "0.3.6"


[[test]]
name = "integration"
path = "integration/main.rs"
harness = false

#name = "end_2_end_test"
#path = "tests/e2e/end_2_end_test.rs"
# TODO: harness is the standard mecanism to discover test in the rust libtest that is used by default.
#       If we use harness, we have "legacy" end-to-end tests, but as we use the standard tests runner we cannot use
#       the cucumber runner.
#       At some point we need to introduce a main which handle manually both the legacy tests and also call the cucumber runner manually.
#       The difficult part is related to the legacy runner dans the discovery of tests. A tutorial do to that is available here:
#       https://www.infinyon.com/blog/2021/04/rust-custom-test-harness/
#harness = true
